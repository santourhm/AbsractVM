; start main program
; Main program
; Beginning of main instructions:
	LOAD #5, R2
	STORE R2, 1(GB)
	LOAD #3, R2
	STORE R2, 2(GB)
	LOAD #0x1.4p1, R2
	STORE R2, 3(GB)
	LOAD 1(GB), R2
	FLOAT R2, R2
	LOAD 3(GB), R3
	MUL R3, R2
	STORE R2, 4(GB)
	LOAD 1(GB), R2
	LOAD 2(GB), R3
	ADD R3, R2
	STORE R2, 5(GB)
	LOAD 1(GB), R2
	LOAD 2(GB), R3
	MUL R3, R2
	STORE R2, 6(GB)
	LOAD 1(GB), R2
	FLOAT R2, R2
	LOAD 3(GB), R3
	ADD R3, R2
	STORE R2, 7(GB)
	WSTR "=== Test Program ==="
	WNL
	WSTR "x = "
	LOAD 1(GB), R1
	WINT
	WNL
	WSTR "y = "
	LOAD 2(GB), R1
	WINT
	WNL
	WSTR "f = "
	LOAD 3(GB), R1
	WFLOAT
	WNL
	WSTR "x + f = "
	LOAD 7(GB), R1
	WFLOAT
	WNL
	LOAD 1(GB), R2
	LOAD 2(GB), R3
	CMP R3, R2
	BLE else.0
	WSTR "x is greater than y"
	WNL
	BRA endif.1
else.0:
	WSTR "x is less than or equal to y"
	WNL
endif.1:
	WSTR "Sum = "
	LOAD 5(GB), R1
	WINT
	WNL
	WSTR "Product = "
	LOAD 6(GB), R1
	WINT
	WNL
	WSTR "x * f = "
	LOAD 4(GB), R1
	WFLOAT
	WNL
	LOAD 1(GB), R1
	LOAD #0, R2
	CMP R2, R1
	SGT R1
	BEQ short_circuit.5
	LOAD 2(GB), R1
	LOAD #10, R2
	CMP R2, R1
	SLT R1
	BRA end.bool.4
short_circuit.5:
	LOAD #0, R1
end.bool.4:
	CMP #0, R1
	BEQ else.2
	WSTR "Both conditions are true"
	WNL
	BRA endif.3
else.2:
endif.3:
	WSTR "=== Test Complete ==="
	WNL
	HALT
; end main program
